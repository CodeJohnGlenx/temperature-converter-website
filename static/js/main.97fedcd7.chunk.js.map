{"version":3,"sources":["index.js"],"names":["App","props","state","degrees","type","convertedValue","handleDegrees","bind","handleType","handleConvert","event","this","setState","target","value","isNaN","alert","convert","preventDefault","Number","toFixed","id","onSubmit","htmlFor","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sQAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,KACTC,KAAM,aACNC,eAAgB,MAGlB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBAVJ,E,iDAanB,SAAcG,GACZC,KAAKC,SAAS,CAACT,QAASO,EAAMG,OAAOC,U,wBAGvC,SAAWJ,GACTC,KAAKC,SAAS,CAACR,KAAMM,EAAMG,OAAOC,U,2BAGpC,SAAcJ,GACZ,IAAIP,EAAUQ,KAAKT,MAAMC,QACrBY,MAAMZ,IAAwB,OAAZA,GAEpBa,MAAM,qCACNL,KAAKC,SAAS,CAACP,eAAgB,QAE/BM,KAAKC,SAAS,CAACP,eAAgBM,KAAKM,QAAQN,KAAKT,MAAMC,QAASQ,KAAKT,MAAME,QAE7EM,EAAMQ,mB,qBAGR,SAAQf,EAASC,GACf,MAAkB,eAATA,EACPe,QAAiC,GAAxBA,OAAOhB,GAAW,IAAU,GAAGiB,QAAQ,IAAM,SACtDD,QAA0B,EAAlBA,OAAOhB,GAAe,EAAI,IAAIiB,QAAQ,IAAM,W,oBAGxD,WAEE,OACE,sBAAKC,GAAG,4BAAR,UACE,uDACA,uBAAMA,GAAG,iBAAiBC,SAAUX,KAAKF,cAAzC,UACE,wBAAOc,QAAQ,gBAAgBF,GAAG,gBAAlC,oBACS,uBACP,uBAAOP,MAAOH,KAAKT,MAAMC,QAASkB,GAAG,gBAAgBG,SAAUb,KAAKL,mBAEtE,wBAAOiB,QAAQ,cAAcF,GAAG,aAAhC,kBACO,uBACL,yBAAQP,MAAOH,KAAKT,MAAME,KAAMoB,SAAUb,KAAKH,WAAYa,GAAG,cAA9D,UACE,wBAAQP,MAAM,aAAd,wBACA,wBAAQA,MAAM,UAAd,2BAGJ,uBAAOV,KAAK,SAASU,MAAM,UAAUO,GAAG,gBACxC,sBAAKA,GAAG,SAAR,mBAAuB,uBAAM,mBAAGA,GAAG,QAAN,SAAeV,KAAKT,MAAMG,8B,GA1D/CoB,IAAMC,WAkExBC,IAASC,OAAO,cAAC5B,EAAD,IAAS6B,SAASC,eAAe,W","file":"static/js/main.97fedcd7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      degrees: null,\n      type: 'fahrenheit',\n      convertedValue: '\\0'\n    };\n\n    this.handleDegrees = this.handleDegrees.bind(this);\n    this.handleType = this.handleType.bind(this);\n    this.handleConvert = this.handleConvert.bind(this);\n  }\n\n  handleDegrees(event) {\n    this.setState({degrees: event.target.value});\n  }\n\n  handleType(event) {\n    this.setState({type: event.target.value});\n  }\n\n  handleConvert(event) {\n    let degrees = this.state.degrees;\n    if (isNaN(degrees) || degrees === null)\n    {\n      alert(\"Please enter degrees as a number.\");\n      this.setState({convertedValue: '\\0'});\n    } else {\n      this.setState({convertedValue: this.convert(this.state.degrees, this.state.type)});\n    }\n    event.preventDefault();\n  }\n\n  convert(degrees, type) {\n    return ((type === 'fahrenheit') ? \n      Number(((Number(degrees) - 32) * 5 / 9).toFixed(2)) + \" °C\" : \n      Number((Number(degrees) * 9 / 5 + 32).toFixed(2)) + \" °F\");\n  }\n\n  render() {\n    \n    return(\n      <div id=\"temperature-converter-div\">\n        <h1>Temperature Converter</h1>\n        <form id=\"converter-form\" onSubmit={this.handleConvert}>\n          <label htmlFor=\"degrees-input\" id=\"degrees-label\">\n            Degrees<br />\n            <input value={this.state.degrees} id=\"degrees-input\" onChange={this.handleDegrees}/>\n          </label>\n          <label htmlFor=\"type-select\" id=\"type-label\">\n            Type <br />\n            <select value={this.state.type} onChange={this.handleType} id=\"type-select\">\n              <option value=\"fahrenheit\">Fahrenheit</option>\n              <option value=\"celsius\">Celsius</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Convert\" id=\"convert-btn\"/>\n          <div id=\"result\">Result<br /><p id=\"value\">{this.state.convertedValue}</p></div>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}